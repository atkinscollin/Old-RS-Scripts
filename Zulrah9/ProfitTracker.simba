program new;
{$DEFINE SMART}
{$i finclude/finclude.simba}

Const
  TrackLongPeriod = False;

  TodaysDate =False;
    c_Year = 2015;
    c_Month = 6;
    c_Day = 22;

var
  Paths: TStringArray;

function useDate(DateFormat: Integer): string;
var
  Year, Month, Day: Word;
  D: string;
  Mnths, sfx: TStringArray;
begin
  If TodaysDate then
    DecodeDate(Date, Year, Month, Day)
  else
  begin
    Year := c_Year;
    Month := c_Month;
    Day := c_Day;
  end;
  Mnths := ['January', 'February', 'March', 'April', 'May', 'June', 'July',
            'August', 'September', 'October', 'November', 'December'];
  sfx := ['st', 'nd', 'rd'];
  case DateFormat of
    1:
      begin
        if InRange(Day mod 10, 1, 3) and not InRange(Day, 11, 13) then
          D := sfx[(Day mod 10)-1]
        else
          D := 'th';
        Result := Mnths[Month - 1] + ' ' + IntToStr(Day) + D +', ' + IntToStr(Year);
      end;
    2: Result := Padz(IntToStr(Month), 2) + '/' + Padz(IntToStr(Day), 2) + '/' + Copy(IntToStr(Year), 3, 4);
    3: Result := Padz(IntToStr(Day), 2) + '-' + Padz(IntToStr(Month), 2) + '-' + Copy(IntToStr(Year), 3, 4);
  else
    writeln('DateFormat can only be 1, 2, or 3!');
  end;
end;

function getPathValues(Section: String): Integer;
var
  I: Integer;
  S: String;
begin
  For I:=0 to High(Paths)do
  begin
    S := ReadINI('Info', Section, Paths[I] + useDate(DATE_FORMAL) + '.ini');
    Result := Result + StrToIntDef(S, 0);
  end;
end;

begin
  Paths := ['C:\Users\Olav\Desktop\Zulrah\progress\osendre@gmail.com\'];
  repeat
    ClearDebug;
    Writeln(useDate(DATE_FORMAL));
    Writeln('');
    Writeln('Profit: ' + ToStr(getPathValues('GP') div 1000) + 'K (' +  ToStr(getPathValues('GP') div 1000000) + 'M)');
    Writeln('Kills: ' + ToStr(getPathValues('Kills')));
    Writeln('Deaths: ' + ToStr(getPathValues('Deaths')));
    If not TrackLongPeriod then
      Break;
    Wait(60000);
  until(False);
end.
